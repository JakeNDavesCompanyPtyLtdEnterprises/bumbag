// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly for a basic checkbox field 1`] = `
.c0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
}

.c0:focus:not(:focus-visible) {
  outline: none;
}

.c3 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-top: 0.5rem !important;
}

.c3:focus:not(:focus-visible) {
  outline: none;
}

.c5 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: white;
  color: inherit;
}

.c5:focus:not(:focus-visible) {
  outline: none;
}

.c9 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-left: 0.5rem !important;
}

.c9:focus:not(:focus-visible) {
  outline: none;
}

abbr.c8 {
  border-bottom: 1px dotted;
  cursor: help;
  -webkit-text-decoration: none;
  text-decoration: none;
}

i.c8 {
  font-style: italic;
}

kbd.c8 {
  background: #454d5d;
  border-radius: 0.1rem;
  color: #fff;
  fill: #fff;
  padding: 0.1rem 0.2rem;
}

mark.c8 {
  background: #ffe9b3;
  border-radius: 0.1rem;
  padding: 0.1rem 0.2rem;
}

strong.c8 {
  font-weight: bold;
}

sub.c8,
sup.c8 {
  font-size: 0.8em;
  vertical-align: baseline;
}

ins.c8,
u.c8 {
  -webkit-text-decoration-skip: ink edges;
  text-decoration-skip: ink edges;
}

i.c8,
cite.c8,
var.c8,
em.c8 {
  font-style: italic;
}

kbd.c8,
pre.c8,
samp.c8 {
  font-family: 'SF Mono','Segoe UI Mono','Roboto Mono',Menlo,Courier,monospace;
}

.c8 .c10 {
  top: 0.15em;
}

.c2 {
  display: inline-block;
}

.c7 {
  border: 1px solid #bdbdbd;
  box-shadow: inset 0px 1px 2px #e5e5e5;
  border-radius: 0.2em;
  height: 1em;
  position: relative;
  width: 1em;
}

.c4 {
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

.c4[disabled] + .c6 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c4:checked:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:not([disabled]):checked + .c6 {
  border-color: #7c81d9;
}

.c4:checked + .c6::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c4:checked + .c6::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c4[disabled]:checked + .c6::before {
  border-color: #9a9a9a;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<div
  class="c0"
  display="inline-block"
  style="display: inline-block;"
>
  <div />
  <label
    aria-describedby="label"
    aria-invalid="false"
    aria-label="Check me"
    aria-required="false"
    class="c1 c2 c3"
  >
    <input
      class="c4 c5"
      type="checkbox"
      value=""
    />
    <div
      class="c6 c7 c0"
    />
    <span
      class="c8 c9"
      id="label"
    >
      Check me
    </span>
  </label>
  <div />
</div>
`;

exports[`renders correctly for a disabled checkbox field 1`] = `
.c0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
}

.c0:focus:not(:focus-visible) {
  outline: none;
}

.c3 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-top: 0.5rem !important;
}

.c3:focus:not(:focus-visible) {
  outline: none;
}

.c5 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: white;
  color: inherit;
}

.c5:focus:not(:focus-visible) {
  outline: none;
}

.c9 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-left: 0.5rem !important;
}

.c9:focus:not(:focus-visible) {
  outline: none;
}

abbr.c8 {
  border-bottom: 1px dotted;
  cursor: help;
  -webkit-text-decoration: none;
  text-decoration: none;
}

i.c8 {
  font-style: italic;
}

kbd.c8 {
  background: #454d5d;
  border-radius: 0.1rem;
  color: #fff;
  fill: #fff;
  padding: 0.1rem 0.2rem;
}

mark.c8 {
  background: #ffe9b3;
  border-radius: 0.1rem;
  padding: 0.1rem 0.2rem;
}

strong.c8 {
  font-weight: bold;
}

sub.c8,
sup.c8 {
  font-size: 0.8em;
  vertical-align: baseline;
}

ins.c8,
u.c8 {
  -webkit-text-decoration-skip: ink edges;
  text-decoration-skip: ink edges;
}

i.c8,
cite.c8,
var.c8,
em.c8 {
  font-style: italic;
}

kbd.c8,
pre.c8,
samp.c8 {
  font-family: 'SF Mono','Segoe UI Mono','Roboto Mono',Menlo,Courier,monospace;
}

.c8 .c10 {
  top: 0.15em;
}

.c2 {
  display: inline-block;
}

.c7 {
  border: 1px solid #bdbdbd;
  box-shadow: inset 0px 1px 2px #e5e5e5;
  border-radius: 0.2em;
  height: 1em;
  position: relative;
  width: 1em;
}

.c4 {
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

.c4[disabled] + .c6 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c4:checked:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:not([disabled]):checked + .c6 {
  border-color: #7c81d9;
}

.c4:checked + .c6::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c4:checked + .c6::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c4[disabled]:checked + .c6::before {
  border-color: #9a9a9a;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<div
  class="c0"
  display="inline-block"
  style="display: inline-block;"
>
  <div />
  <label
    aria-describedby="label"
    aria-invalid="false"
    aria-label="Check me"
    aria-required="false"
    class="c1 c2 c3"
  >
    <input
      class="c4 c5"
      disabled=""
      type="checkbox"
      value=""
    />
    <div
      class="c6 c7 c0"
    />
    <span
      class="c8 c9"
      id="label"
    >
      Check me
    </span>
  </label>
  <div />
</div>
`;

exports[`renders correctly for a required field 1`] = `
.c0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
}

.c0:focus:not(:focus-visible) {
  outline: none;
}

.c7 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-top: 0.5rem !important;
}

.c7:focus:not(:focus-visible) {
  outline: none;
}

.c9 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: white;
  color: inherit;
}

.c9:focus:not(:focus-visible) {
  outline: none;
}

.c13 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-left: 0.5rem !important;
}

.c13:focus:not(:focus-visible) {
  outline: none;
}

.c5 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-bottom: 0.25rem !important;
}

.c5:focus:not(:focus-visible) {
  outline: none;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

abbr.c12 {
  border-bottom: 1px dotted;
  cursor: help;
  -webkit-text-decoration: none;
  text-decoration: none;
}

i.c12 {
  font-style: italic;
}

kbd.c12 {
  background: #454d5d;
  border-radius: 0.1rem;
  color: #fff;
  fill: #fff;
  padding: 0.1rem 0.2rem;
}

mark.c12 {
  background: #ffe9b3;
  border-radius: 0.1rem;
  padding: 0.1rem 0.2rem;
}

strong.c12 {
  font-weight: bold;
}

sub.c12,
sup.c12 {
  font-size: 0.8em;
  vertical-align: baseline;
}

ins.c12,
u.c12 {
  -webkit-text-decoration-skip: ink edges;
  text-decoration-skip: ink edges;
}

i.c12,
cite.c12,
var.c12,
em.c12 {
  font-style: italic;
}

kbd.c12,
pre.c12,
samp.c12 {
  font-family: 'SF Mono','Segoe UI Mono','Roboto Mono',Menlo,Courier,monospace;
}

.c12 .c15 {
  top: 0.15em;
}

.c4 {
  display: inline-block;
}

.c11 {
  border: 1px solid #bdbdbd;
  box-shadow: inset 0px 1px 2px #e5e5e5;
  border-radius: 0.2em;
  height: 1em;
  position: relative;
  width: 1em;
}

.c8 {
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

.c8[disabled] + .c10 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c8:checked:focus + .c10 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c8:focus + .c10 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c8:not([disabled]):checked + .c10 {
  border-color: #7c81d9;
}

.c8:checked + .c10::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c8:checked + .c10::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c8[disabled]:checked + .c10::before {
  border-color: #9a9a9a;
}

.c14[disabled] + .c10 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c14:checked:focus + .c10 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c14:focus + .c10 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c14:not([disabled]):checked + .c10 {
  border-color: #7c81d9;
}

.c14:checked + .c10 {
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c14:checked + .c10::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c14:checked + .c10::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c14[disabled]:checked + .c10::before {
  border-color: #9a9a9a;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  display: block;
}

.c2 {
  margin-bottom: 0 !important;
}

<div
  class="c0"
  display="inline-block"
  style="display: inline-block;"
>
  <div
    class="c1 c0"
    style="align-items: center;"
  >
    <label
      class="c2 c3 c4 c5"
      font-weight="600"
      for="username"
      style="font-weight: 600;"
    >
      Username
    </label>
  </div>
  <div />
  <label
    aria-describedby="label"
    aria-invalid="false"
    aria-label="Check me"
    aria-required="true"
    class="c6 c4 c7"
  >
    <input
      class="c8 c9"
      type="checkbox"
      value=""
    />
    <div
      class="c10 c11 c0"
    />
    <span
      class="c12 c13"
      id="label"
    >
      Check me
    </span>
  </label>
  <div />
</div>
`;

exports[`renders correctly for an input field with a description 1`] = `
.c0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
}

.c0:focus:not(:focus-visible) {
  outline: none;
}

.c9 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-top: 0.5rem !important;
}

.c9:focus:not(:focus-visible) {
  outline: none;
}

.c11 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: white;
  color: inherit;
}

.c11:focus:not(:focus-visible) {
  outline: none;
}

.c14 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-left: 0.5rem !important;
}

.c14:focus:not(:focus-visible) {
  outline: none;
}

.c5 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-bottom: 0.25rem !important;
}

.c5:focus:not(:focus-visible) {
  outline: none;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

abbr.c7 {
  border-bottom: 1px dotted;
  cursor: help;
  -webkit-text-decoration: none;
  text-decoration: none;
}

i.c7 {
  font-style: italic;
}

kbd.c7 {
  background: #454d5d;
  border-radius: 0.1rem;
  color: #fff;
  fill: #fff;
  padding: 0.1rem 0.2rem;
}

mark.c7 {
  background: #ffe9b3;
  border-radius: 0.1rem;
  padding: 0.1rem 0.2rem;
}

strong.c7 {
  font-weight: bold;
}

sub.c7,
sup.c7 {
  font-size: 0.8em;
  vertical-align: baseline;
}

ins.c7,
u.c7 {
  -webkit-text-decoration-skip: ink edges;
  text-decoration-skip: ink edges;
}

i.c7,
cite.c7,
var.c7,
em.c7 {
  font-style: italic;
}

kbd.c7,
pre.c7,
samp.c7 {
  font-family: 'SF Mono','Segoe UI Mono','Roboto Mono',Menlo,Courier,monospace;
}

.c7 .c16 {
  top: 0.15em;
}

.c4 {
  display: inline-block;
}

.c13 {
  border: 1px solid #bdbdbd;
  box-shadow: inset 0px 1px 2px #e5e5e5;
  border-radius: 0.2em;
  height: 1em;
  position: relative;
  width: 1em;
}

.c10 {
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

.c10[disabled] + .c12 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c10:checked:focus + .c12 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:focus + .c12 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:not([disabled]):checked + .c12 {
  border-color: #7c81d9;
}

.c10:checked + .c12::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c10:checked + .c12::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c10[disabled]:checked + .c12::before {
  border-color: #9a9a9a;
}

.c15[disabled] + .c12 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c15:checked:focus + .c12 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c15:focus + .c12 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c15:not([disabled]):checked + .c12 {
  border-color: #7c81d9;
}

.c15:checked + .c12 {
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c15:checked + .c12::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c15:checked + .c12::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c15[disabled]:checked + .c12::before {
  border-color: #9a9a9a;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  display: block;
}

.c2 {
  margin-bottom: 0 !important;
}

.c6 {
  display: block;
  font-size: 0.8rem;
}

<div
  class="c0"
  display="inline-block"
  style="display: inline-block;"
>
  <div
    class="c1 c0"
    style="align-items: center;"
  >
    <label
      class="c2 c3 c4 c5"
      font-weight="600"
      for="username"
      style="font-weight: 600;"
    >
      Username
    </label>
  </div>
  <span
    class="c6 c7 c0"
  >
    Required for your fannypack
  </span>
  <label
    aria-describedby="label"
    aria-invalid="false"
    aria-label="Check me"
    aria-required="false"
    class="c8 c4 c9"
  >
    <input
      class="c10 c11"
      type="checkbox"
      value=""
    />
    <div
      class="c12 c13 c0"
    />
    <span
      class="c7 c14"
      id="label"
    >
      Check me
    </span>
  </label>
  <div />
</div>
`;

exports[`renders correctly for an input field with a hint 1`] = `
.c0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
}

.c0:focus:not(:focus-visible) {
  outline: none;
}

.c7 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-top: 0.5rem !important;
}

.c7:focus:not(:focus-visible) {
  outline: none;
}

.c9 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: white;
  color: inherit;
}

.c9:focus:not(:focus-visible) {
  outline: none;
}

.c13 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-left: 0.5rem !important;
}

.c13:focus:not(:focus-visible) {
  outline: none;
}

.c5 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-bottom: 0.25rem !important;
}

.c5:focus:not(:focus-visible) {
  outline: none;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

abbr.c12 {
  border-bottom: 1px dotted;
  cursor: help;
  -webkit-text-decoration: none;
  text-decoration: none;
}

i.c12 {
  font-style: italic;
}

kbd.c12 {
  background: #454d5d;
  border-radius: 0.1rem;
  color: #fff;
  fill: #fff;
  padding: 0.1rem 0.2rem;
}

mark.c12 {
  background: #ffe9b3;
  border-radius: 0.1rem;
  padding: 0.1rem 0.2rem;
}

strong.c12 {
  font-weight: bold;
}

sub.c12,
sup.c12 {
  font-size: 0.8em;
  vertical-align: baseline;
}

ins.c12,
u.c12 {
  -webkit-text-decoration-skip: ink edges;
  text-decoration-skip: ink edges;
}

i.c12,
cite.c12,
var.c12,
em.c12 {
  font-style: italic;
}

kbd.c12,
pre.c12,
samp.c12 {
  font-family: 'SF Mono','Segoe UI Mono','Roboto Mono',Menlo,Courier,monospace;
}

.c12 .c16 {
  top: 0.15em;
}

.c4 {
  display: inline-block;
}

.c11 {
  border: 1px solid #bdbdbd;
  box-shadow: inset 0px 1px 2px #e5e5e5;
  border-radius: 0.2em;
  height: 1em;
  position: relative;
  width: 1em;
}

.c8 {
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

.c8[disabled] + .c10 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c8:checked:focus + .c10 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c8:focus + .c10 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c8:not([disabled]):checked + .c10 {
  border-color: #7c81d9;
}

.c8:checked + .c10::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c8:checked + .c10::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c8[disabled]:checked + .c10::before {
  border-color: #9a9a9a;
}

.c15[disabled] + .c10 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c15:checked:focus + .c10 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c15:focus + .c10 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c15:not([disabled]):checked + .c10 {
  border-color: #7c81d9;
}

.c15:checked + .c10 {
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c15:checked + .c10::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c15:checked + .c10::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c15[disabled]:checked + .c10::before {
  border-color: #9a9a9a;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  display: block;
}

.c2 {
  margin-bottom: 0 !important;
}

.c14 {
  display: block;
  font-size: 0.8rem;
  margin-top: 0.25rem;
}

<div
  class="c0"
  display="inline-block"
  style="display: inline-block;"
>
  <div
    class="c1 c0"
    style="align-items: center;"
  >
    <label
      class="c2 c3 c4 c5"
      font-weight="600"
      for="username"
      style="font-weight: 600;"
    >
      Username
    </label>
  </div>
  <div />
  <label
    aria-describedby="label"
    aria-invalid="false"
    aria-label="Check me"
    aria-required="false"
    class="c6 c4 c7"
  >
    <input
      class="c8 c9"
      type="checkbox"
      value=""
    />
    <div
      class="c10 c11 c0"
    />
    <span
      class="c12 c13"
      id="label"
    >
      Check me
    </span>
  </label>
  <span
    class="c14 c12 c0"
  >
    Must be awesome
  </span>
</div>
`;

exports[`renders correctly for an optional input field 1`] = `
.c0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
}

.c0:focus:not(:focus-visible) {
  outline: none;
}

.c9 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-top: 0.5rem !important;
}

.c9:focus:not(:focus-visible) {
  outline: none;
}

.c11 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: white;
  color: inherit;
}

.c11:focus:not(:focus-visible) {
  outline: none;
}

.c14 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-left: 0.5rem !important;
}

.c14:focus:not(:focus-visible) {
  outline: none;
}

.c5 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-bottom: 0.25rem !important;
}

.c5:focus:not(:focus-visible) {
  outline: none;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

abbr.c7 {
  border-bottom: 1px dotted;
  cursor: help;
  -webkit-text-decoration: none;
  text-decoration: none;
}

i.c7 {
  font-style: italic;
}

kbd.c7 {
  background: #454d5d;
  border-radius: 0.1rem;
  color: #fff;
  fill: #fff;
  padding: 0.1rem 0.2rem;
}

mark.c7 {
  background: #ffe9b3;
  border-radius: 0.1rem;
  padding: 0.1rem 0.2rem;
}

strong.c7 {
  font-weight: bold;
}

sub.c7,
sup.c7 {
  font-size: 0.8em;
  vertical-align: baseline;
}

ins.c7,
u.c7 {
  -webkit-text-decoration-skip: ink edges;
  text-decoration-skip: ink edges;
}

i.c7,
cite.c7,
var.c7,
em.c7 {
  font-style: italic;
}

kbd.c7,
pre.c7,
samp.c7 {
  font-family: 'SF Mono','Segoe UI Mono','Roboto Mono',Menlo,Courier,monospace;
}

.c7 .c16 {
  top: 0.15em;
}

.c4 {
  display: inline-block;
}

.c13 {
  border: 1px solid #bdbdbd;
  box-shadow: inset 0px 1px 2px #e5e5e5;
  border-radius: 0.2em;
  height: 1em;
  position: relative;
  width: 1em;
}

.c10 {
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

.c10[disabled] + .c12 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c10:checked:focus + .c12 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:focus + .c12 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:not([disabled]):checked + .c12 {
  border-color: #7c81d9;
}

.c10:checked + .c12::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c10:checked + .c12::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c10[disabled]:checked + .c12::before {
  border-color: #9a9a9a;
}

.c15[disabled] + .c12 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c15:checked:focus + .c12 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c15:focus + .c12 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c15:not([disabled]):checked + .c12 {
  border-color: #7c81d9;
}

.c15:checked + .c12 {
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c15:checked + .c12::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c15:checked + .c12::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c15[disabled]:checked + .c12::before {
  border-color: #9a9a9a;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  display: block;
}

.c2 {
  margin-bottom: 0 !important;
}

.c6 {
  font-size: 0.8rem;
  color: #708da8;
  margin-left: 0.5rem;
}

<div
  class="c0"
  display="inline-block"
  style="display: inline-block;"
>
  <div
    class="c1 c0"
    style="align-items: center;"
  >
    <label
      class="c2 c3 c4 c5"
      font-weight="600"
      for="username"
      style="font-weight: 600;"
    >
      Username
    </label>
    <span
      class="c6 c7 c0"
    >
      OPTIONAL
    </span>
  </div>
  <div />
  <label
    aria-describedby="label"
    aria-invalid="false"
    aria-label="Check me"
    aria-required="false"
    class="c8 c4 c9"
  >
    <input
      class="c10 c11"
      type="checkbox"
      value=""
    />
    <div
      class="c12 c13 c0"
    />
    <span
      class="c7 c14"
      id="label"
    >
      Check me
    </span>
  </label>
  <div />
</div>
`;

exports[`states renders correctly for a checkbox field with state danger 1`] = `
.c0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
}

.c0:focus:not(:focus-visible) {
  outline: none;
}

.c3 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-top: 0.5rem !important;
}

.c3:focus:not(:focus-visible) {
  outline: none;
}

.c5 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: white;
  color: inherit;
}

.c5:focus:not(:focus-visible) {
  outline: none;
}

.c9 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-left: 0.5rem !important;
}

.c9:focus:not(:focus-visible) {
  outline: none;
}

abbr.c8 {
  border-bottom: 1px dotted;
  cursor: help;
  -webkit-text-decoration: none;
  text-decoration: none;
}

i.c8 {
  font-style: italic;
}

kbd.c8 {
  background: #454d5d;
  border-radius: 0.1rem;
  color: #fff;
  fill: #fff;
  padding: 0.1rem 0.2rem;
}

mark.c8 {
  background: #ffe9b3;
  border-radius: 0.1rem;
  padding: 0.1rem 0.2rem;
}

strong.c8 {
  font-weight: bold;
}

sub.c8,
sup.c8 {
  font-size: 0.8em;
  vertical-align: baseline;
}

ins.c8,
u.c8 {
  -webkit-text-decoration-skip: ink edges;
  text-decoration-skip: ink edges;
}

i.c8,
cite.c8,
var.c8,
em.c8 {
  font-style: italic;
}

kbd.c8,
pre.c8,
samp.c8 {
  font-family: 'SF Mono','Segoe UI Mono','Roboto Mono',Menlo,Courier,monospace;
}

.c8 .c11 {
  top: 0.15em;
}

.c2 {
  display: inline-block;
}

.c7 {
  border: 1px solid #bdbdbd;
  box-shadow: inset 0px 1px 2px #e5e5e5;
  border-radius: 0.2em;
  height: 1em;
  position: relative;
  width: 1em;
}

.c7 {
  border-color: #d97c82;
  box-shadow: #d97c82 0px 0px 0px 1px !important;
}

.c10[disabled] + .c6 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c10:checked:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:not([disabled]):checked + .c6 {
  border-color: #7c81d9;
}

.c10:checked + .c6::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c10:checked + .c6::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c10[disabled]:checked + .c6::before {
  border-color: #9a9a9a;
}

.c4 {
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

.c4[disabled] + .c6 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c4:checked:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:not([disabled]):checked + .c6 {
  border-color: #7c81d9;
}

.c4:checked + .c6 {
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:checked + .c6::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c4:checked + .c6::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c4[disabled]:checked + .c6::before {
  border-color: #9a9a9a;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<div
  class="c0"
  display="inline-block"
  style="display: inline-block;"
>
  <div />
  <label
    aria-describedby="label"
    aria-invalid="true"
    aria-label="Check me"
    aria-required="false"
    class="c1 c2 c3"
  >
    <input
      class="c4 c5"
      type="checkbox"
      value=""
    />
    <div
      class="c6 c7 c0"
    />
    <span
      class="c8 c9"
      id="label"
    >
      Check me
    </span>
  </label>
  <div />
</div>
`;

exports[`states renders correctly for a checkbox field with state primary 1`] = `
.c0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
}

.c0:focus:not(:focus-visible) {
  outline: none;
}

.c3 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-top: 0.5rem !important;
}

.c3:focus:not(:focus-visible) {
  outline: none;
}

.c5 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: white;
  color: inherit;
}

.c5:focus:not(:focus-visible) {
  outline: none;
}

.c9 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-left: 0.5rem !important;
}

.c9:focus:not(:focus-visible) {
  outline: none;
}

abbr.c8 {
  border-bottom: 1px dotted;
  cursor: help;
  -webkit-text-decoration: none;
  text-decoration: none;
}

i.c8 {
  font-style: italic;
}

kbd.c8 {
  background: #454d5d;
  border-radius: 0.1rem;
  color: #fff;
  fill: #fff;
  padding: 0.1rem 0.2rem;
}

mark.c8 {
  background: #ffe9b3;
  border-radius: 0.1rem;
  padding: 0.1rem 0.2rem;
}

strong.c8 {
  font-weight: bold;
}

sub.c8,
sup.c8 {
  font-size: 0.8em;
  vertical-align: baseline;
}

ins.c8,
u.c8 {
  -webkit-text-decoration-skip: ink edges;
  text-decoration-skip: ink edges;
}

i.c8,
cite.c8,
var.c8,
em.c8 {
  font-style: italic;
}

kbd.c8,
pre.c8,
samp.c8 {
  font-family: 'SF Mono','Segoe UI Mono','Roboto Mono',Menlo,Courier,monospace;
}

.c8 .c11 {
  top: 0.15em;
}

.c2 {
  display: inline-block;
}

.c7 {
  border: 1px solid #bdbdbd;
  box-shadow: inset 0px 1px 2px #e5e5e5;
  border-radius: 0.2em;
  height: 1em;
  position: relative;
  width: 1em;
}

.c7 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10[disabled] + .c6 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c10:checked:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:not([disabled]):checked + .c6 {
  border-color: #7c81d9;
}

.c10:checked + .c6::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c10:checked + .c6::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c10[disabled]:checked + .c6::before {
  border-color: #9a9a9a;
}

.c4 {
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

.c4[disabled] + .c6 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c4:checked:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:not([disabled]):checked + .c6 {
  border-color: #7c81d9;
}

.c4:checked + .c6 {
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:checked + .c6::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c4:checked + .c6::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c4[disabled]:checked + .c6::before {
  border-color: #9a9a9a;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<div
  class="c0"
  display="inline-block"
  style="display: inline-block;"
>
  <div />
  <label
    aria-describedby="label"
    aria-invalid="false"
    aria-label="Check me"
    aria-required="false"
    class="c1 c2 c3"
  >
    <input
      class="c4 c5"
      type="checkbox"
      value=""
    />
    <div
      class="c6 c7 c0"
    />
    <span
      class="c8 c9"
      id="label"
    >
      Check me
    </span>
  </label>
  <div />
</div>
`;

exports[`states renders correctly for a checkbox field with state success 1`] = `
.c0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
}

.c0:focus:not(:focus-visible) {
  outline: none;
}

.c3 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-top: 0.5rem !important;
}

.c3:focus:not(:focus-visible) {
  outline: none;
}

.c5 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: white;
  color: inherit;
}

.c5:focus:not(:focus-visible) {
  outline: none;
}

.c9 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-left: 0.5rem !important;
}

.c9:focus:not(:focus-visible) {
  outline: none;
}

abbr.c8 {
  border-bottom: 1px dotted;
  cursor: help;
  -webkit-text-decoration: none;
  text-decoration: none;
}

i.c8 {
  font-style: italic;
}

kbd.c8 {
  background: #454d5d;
  border-radius: 0.1rem;
  color: #fff;
  fill: #fff;
  padding: 0.1rem 0.2rem;
}

mark.c8 {
  background: #ffe9b3;
  border-radius: 0.1rem;
  padding: 0.1rem 0.2rem;
}

strong.c8 {
  font-weight: bold;
}

sub.c8,
sup.c8 {
  font-size: 0.8em;
  vertical-align: baseline;
}

ins.c8,
u.c8 {
  -webkit-text-decoration-skip: ink edges;
  text-decoration-skip: ink edges;
}

i.c8,
cite.c8,
var.c8,
em.c8 {
  font-style: italic;
}

kbd.c8,
pre.c8,
samp.c8 {
  font-family: 'SF Mono','Segoe UI Mono','Roboto Mono',Menlo,Courier,monospace;
}

.c8 .c11 {
  top: 0.15em;
}

.c2 {
  display: inline-block;
}

.c7 {
  border: 1px solid #bdbdbd;
  box-shadow: inset 0px 1px 2px #e5e5e5;
  border-radius: 0.2em;
  height: 1em;
  position: relative;
  width: 1em;
}

.c7 {
  border-color: #6ba886;
  box-shadow: #6ba886 0px 0px 0px 1px !important;
}

.c10[disabled] + .c6 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c10:checked:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:not([disabled]):checked + .c6 {
  border-color: #7c81d9;
}

.c10:checked + .c6::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c10:checked + .c6::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c10[disabled]:checked + .c6::before {
  border-color: #9a9a9a;
}

.c4 {
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

.c4[disabled] + .c6 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c4:checked:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:not([disabled]):checked + .c6 {
  border-color: #7c81d9;
}

.c4:checked + .c6 {
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:checked + .c6::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c4:checked + .c6::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c4[disabled]:checked + .c6::before {
  border-color: #9a9a9a;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<div
  class="c0"
  display="inline-block"
  style="display: inline-block;"
>
  <div />
  <label
    aria-describedby="label"
    aria-invalid="false"
    aria-label="Check me"
    aria-required="false"
    class="c1 c2 c3"
  >
    <input
      class="c4 c5"
      type="checkbox"
      value=""
    />
    <div
      class="c6 c7 c0"
    />
    <span
      class="c8 c9"
      id="label"
    >
      Check me
    </span>
  </label>
  <div />
</div>
`;

exports[`states renders correctly for a checkbox field with state warning 1`] = `
.c0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
}

.c0:focus:not(:focus-visible) {
  outline: none;
}

.c3 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-top: 0.5rem !important;
}

.c3:focus:not(:focus-visible) {
  outline: none;
}

.c5 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: white;
  color: inherit;
}

.c5:focus:not(:focus-visible) {
  outline: none;
}

.c9 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
  background-color: unset;
  color: inherit;
  margin-left: 0.5rem !important;
}

.c9:focus:not(:focus-visible) {
  outline: none;
}

abbr.c8 {
  border-bottom: 1px dotted;
  cursor: help;
  -webkit-text-decoration: none;
  text-decoration: none;
}

i.c8 {
  font-style: italic;
}

kbd.c8 {
  background: #454d5d;
  border-radius: 0.1rem;
  color: #fff;
  fill: #fff;
  padding: 0.1rem 0.2rem;
}

mark.c8 {
  background: #ffe9b3;
  border-radius: 0.1rem;
  padding: 0.1rem 0.2rem;
}

strong.c8 {
  font-weight: bold;
}

sub.c8,
sup.c8 {
  font-size: 0.8em;
  vertical-align: baseline;
}

ins.c8,
u.c8 {
  -webkit-text-decoration-skip: ink edges;
  text-decoration-skip: ink edges;
}

i.c8,
cite.c8,
var.c8,
em.c8 {
  font-style: italic;
}

kbd.c8,
pre.c8,
samp.c8 {
  font-family: 'SF Mono','Segoe UI Mono','Roboto Mono',Menlo,Courier,monospace;
}

.c8 .c11 {
  top: 0.15em;
}

.c2 {
  display: inline-block;
}

.c7 {
  border: 1px solid #bdbdbd;
  box-shadow: inset 0px 1px 2px #e5e5e5;
  border-radius: 0.2em;
  height: 1em;
  position: relative;
  width: 1em;
}

.c7 {
  border-color: #f5bd4c;
  box-shadow: #f5bd4c 0px 0px 0px 1px !important;
}

.c10[disabled] + .c6 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c10:checked:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c10:not([disabled]):checked + .c6 {
  border-color: #7c81d9;
}

.c10:checked + .c6::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c10:checked + .c6::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c10[disabled]:checked + .c6::before {
  border-color: #9a9a9a;
}

.c4 {
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

.c4[disabled] + .c6 {
  background-color: #f2f2f2;
  box-shadow: unset;
}

.c4:checked:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:focus + .c6 {
  border-color: #7c81d9;
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:not([disabled]):checked + .c6 {
  border-color: #7c81d9;
}

.c4:checked + .c6 {
  box-shadow: #7c81d9 0px 0px 0px 1px !important;
}

.c4:checked + .c6::before {
  background-clip: padding-box;
  content: '';
  left: calc(50% - 3px);
  top: calc(50% - 6px);
  position: absolute;
}

.c4:checked + .c6::before {
  border: 0.1rem solid #7c81d9;
  border-left-width: 0;
  border-top-width: 0;
  height: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  width: 6px;
}

.c4[disabled]:checked + .c6::before {
  border-color: #9a9a9a;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<div
  class="c0"
  display="inline-block"
  style="display: inline-block;"
>
  <div />
  <label
    aria-describedby="label"
    aria-invalid="false"
    aria-label="Check me"
    aria-required="false"
    class="c1 c2 c3"
  >
    <input
      class="c4 c5"
      type="checkbox"
      value=""
    />
    <div
      class="c6 c7 c0"
    />
    <span
      class="c8 c9"
      id="label"
    >
      Check me
    </span>
  </label>
  <div />
</div>
`;
