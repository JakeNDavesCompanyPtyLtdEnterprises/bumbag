// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`composition as should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<p
  class="emotion-0 emotion-1 fp-Box"
>
  Hello world
</p>
`;

exports[`composition hook should return with box props 1`] = `
Object {
  "className": "css-1pwrqjj css-3ekj6a fp-Box",
}
`;

exports[`composition render props should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<p
  class="emotion-0 emotion-1 fp-Box"
>
  Hello world
</p>
`;

exports[`defaultProps should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<div
  class="emotion-0 emotion-1 test fp-Box"
>
  hello world
</div>
`;

exports[`props should assign a ref 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<div
  class="emotion-0 emotion-1 fp-Box"
>
  Hello world
</div>
`;

exports[`props should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 0 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 0px !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 1 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 2px !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 2 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 4px !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 3 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 8px !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 4 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 16px !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 5 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 32px !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 6 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 64px !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for a borderRadius of default 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 4px !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for a custom border 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border: 1px solid #e6e6e6 !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for an altitude 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  box-shadow: 0px 12px 24px 0px rgba(0,0,0,0.1),0px 0px 12px 6px rgba(0,0,0,0.02);
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for hiddenBreakpoint with a max viewport 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

@media screen and (max-width:768px) {
  .emotion-1 {
    display: none;
  }
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for hiddenBreakpoint with a min viewport 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

@media screen and (min-width:769px) {
  .emotion-1 {
    display: none;
  }
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for hiddenBreakpoint with a single viewport 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

@media screen and (min-width:481px) and (max-width:768px) {
  .emotion-1 {
    display: none;
  }
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for showBreakpoint with a max viewport 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

@media screen and (min-width:769px) {
  .emotion-1 {
    display: none;
  }
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for showBreakpoint with a min viewport 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

@media screen and (max-width:768px) {
  .emotion-1 {
    display: none;
  }
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly for showBreakpoint with a single viewport 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

@media screen and (max-width:480px) {
  .emotion-1 {
    display: none;
  }
}

@media screen and (min-width:769px) {
  .emotion-1 {
    display: none;
  }
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly with CSS props 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-color: red !important;
  color: white !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly with CSS props with breakpoints 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-color: #3722ed !important;
}

@media screen and (min-width:1px) and (max-width:480px) {
  .emotion-1 {
    background-color: #9c22ed !important;
  }
}

@media screen and (min-width:769px) and (max-width:1024px) {
  .emotion-1 {
    background-color: red !important;
  }
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly with CSS props with breakpoints 2`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-color: #3722ed !important;
}

@media screen and (max-width:768px) {
  .emotion-1 {
    background-color: #9c22ed !important;
  }
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly with CSS props with breakpoints 3`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-color: #3722ed !important;
}

@media screen and (min-width:769px) {
  .emotion-1 {
    background-color: #9c22ed !important;
  }
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly with a color CSS prop 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-color: #d9d9d9 !important;
  color: #3722ed !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly with a font size CSS prop 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  font-size: 1.5em !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly with a font weight CSS prop 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  font-weight: 600 !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly with a spacing CSS prop 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  margin: 2rem !important;
  padding-left: 1rem !important;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly with aria* props 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<div
  aria-label="hello"
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`props should render correctly with overrides 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: red;
}

<div
  class="emotion-0 emotion-1 fp-Box"
/>
`;

exports[`theming Box.root should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: red;
}

<div
  class="emotion-0 emotion-1 fp-Box"
>
  hello world
</div>
`;

exports[`theming Box.root should render correctly 2`] = `
.emotion-1 {
  color: green !important;
}

.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: green;
}

<div
  class="emotion-0 emotion-1 fp-Box"
>
  hello world
</div>
`;
