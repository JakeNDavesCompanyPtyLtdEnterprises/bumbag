// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`composition as should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

<p>
  <div
    aria-describedby="test"
    class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-TooltipReference"
    tabindex="0"
  >
    Hello world
  </div>
</p>
`;

exports[`composition hook should return with Tooltip props 1`] = `
Object {
  "children": <React.Fragment>
    <ForwardRef
      baseId="test"
      className="css-1pwrqjj css-1jy0tcl fp-Box"
      hide={[Function]}
      place={[Function]}
      placement="top"
      show={[Function]}
      toggle={[Function]}
      unstable_animated={false}
      unstable_animating={false}
      unstable_arrowRef={
        Object {
          "current": null,
        }
      }
      unstable_arrowStyles={Object {}}
      unstable_idCountRef={
        Object {
          "current": 0,
        }
      }
      unstable_originalPlacement="top"
      unstable_popoverRef={
        Object {
          "current": null,
        }
      }
      unstable_popoverStyles={Object {}}
      unstable_referenceRef={
        Object {
          "current": null,
        }
      }
      unstable_scheduleUpdate={[Function]}
      unstable_setBaseId={[Function]}
      unstable_setIsMounted={[Function]}
      unstable_stopAnimation={[Function]}
      unstable_update={[Function]}
      visible={false}
    />
    <ForwardRef
      baseId="test"
      hide={[Function]}
      place={[Function]}
      placement="top"
      show={[Function]}
      toggle={[Function]}
      unstable_animated={false}
      unstable_animating={false}
      unstable_arrowRef={
        Object {
          "current": null,
        }
      }
      unstable_arrowStyles={Object {}}
      unstable_idCountRef={
        Object {
          "current": 0,
        }
      }
      unstable_originalPlacement="top"
      unstable_popoverRef={
        Object {
          "current": null,
        }
      }
      unstable_popoverStyles={Object {}}
      unstable_referenceRef={
        Object {
          "current": null,
        }
      }
      unstable_scheduleUpdate={[Function]}
      unstable_setBaseId={[Function]}
      unstable_setIsMounted={[Function]}
      unstable_stopAnimation={[Function]}
      unstable_update={[Function]}
      visible={false}
    >
      This is content
    </ForwardRef>
  </React.Fragment>,
}
`;

exports[`composition render props should render correctly 1`] = `
<div>
  Hello world
</div>
`;

exports[`defaultProps should render correctly for className 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-3 {
  color: #3722ed !important;
}

<div>
  <div
    aria-describedby="test"
    class="emotion-0 emotion-1 emotion-2 emotion-3 test fp-Box fp-TooltipReference"
    tabindex="0"
  >
    hello world
  </div>
</div>
`;

exports[`overrides Tooltip.Content.root should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

<div>
  <div
    aria-describedby="test"
    class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-TooltipReference"
    tabindex="0"
  >
    hello world
  </div>
</div>
`;

exports[`overrides Tooltip.Reference.root should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: red;
}

<div>
  <div
    aria-describedby="test"
    class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-TooltipReference"
    tabindex="0"
  >
    hello world
  </div>
</div>
`;

exports[`props should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

<div>
  <div
    aria-describedby="test"
    class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-TooltipReference"
    tabindex="0"
  >
    Hello world
  </div>
</div>
`;

exports[`props should render correctly with CSS props 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-3 {
  color: #3722ed !important;
}

<div>
  <div
    aria-describedby="test"
    class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-TooltipReference"
    tabindex="0"
  >
    Hello world
  </div>
</div>
`;

exports[`theming Tooltip.Content.root should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

<div>
  <div
    aria-describedby="test"
    class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-TooltipReference"
    tabindex="0"
  >
    hello world
  </div>
</div>
`;

exports[`theming Tooltip.Reference.root should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: red;
}

<div>
  <div
    aria-describedby="test"
    class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-TooltipReference"
    tabindex="0"
  >
    hello world
  </div>
</div>
`;
